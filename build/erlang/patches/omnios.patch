diff --git a/erts/emulator/Makefile.in b/erts/emulator/Makefile.in
index 55b1f41..8e8a027 100644
--- a/erts/emulator/Makefile.in
+++ b/erts/emulator/Makefile.in
@@ -209,7 +209,7 @@ LIB_PREFIX=lib
 LIB_SUFFIX=.a
 endif
 
-OMIT_OMIT_FP=no
+OMIT_OMIT_FP=yes
 
 ifeq (@EMU_LOCK_CHECKING@,yes)
 NO_INLINE_FUNCTIONS=true
diff --git a/erts/emulator/drivers/common/inet_drv.c b/erts/emulator/drivers/common/inet_drv.c
index 43114c6..ceee886 100644
--- a/erts/emulator/drivers/common/inet_drv.c
+++ b/erts/emulator/drivers/common/inet_drv.c
@@ -4166,16 +4166,7 @@ static int inet_ctl_ifget(inet_descriptor* desc, char* buf, int len,
 	    break;
 
 	case INET_IFOPT_HWADDR: {
-#ifdef SIOCGIFHWADDR
-	    if (ioctl(desc->s, SIOCGIFHWADDR, (char *)&ifreq) < 0)
-		break;
-	    buf_check(sptr, s_end, 1+2+IFHWADDRLEN);
-	    *sptr++ = INET_IFOPT_HWADDR;
-	    put_int16(IFHWADDRLEN, sptr); sptr += 2;
-	    /* raw memcpy (fix include autoconf later) */
-	    sys_memcpy(sptr, (char*)(&ifreq.ifr_hwaddr.sa_data), IFHWADDRLEN);
-	    sptr += IFHWADDRLEN;
-#elif defined(SIOCGENADDR)
+#ifdef SIOCGENADDR
 	    if (ioctl(desc->s, SIOCGENADDR, (char *)&ifreq) < 0)
 		break;
 	    buf_check(sptr, s_end, 1+2+sizeof(ifreq.ifr_enaddr));
@@ -4185,6 +4176,15 @@ static int inet_ctl_ifget(inet_descriptor* desc, char* buf, int len,
 	    sys_memcpy(sptr, (char*)(&ifreq.ifr_enaddr),
 		       sizeof(ifreq.ifr_enaddr));
 	    sptr += sizeof(ifreq.ifr_enaddr);
+#elif defined(SIOCGIFHWADDR)
+	    if (ioctl(desc->s, SIOCGIFHWADDR, (char *)&ifreq) < 0)
+		break;
+	    buf_check(sptr, s_end, 1+2+IFHWADDRLEN);
+	    *sptr++ = INET_IFOPT_HWADDR;
+	    put_int16(IFHWADDRLEN, sptr); sptr += 2;
+	    /* raw memcpy (fix include autoconf later) */
+	    sys_memcpy(sptr, (char*)(&ifreq.ifr_hwaddr.sa_data), IFHWADDRLEN);
+	    sptr += IFHWADDRLEN;
 #elif defined(HAVE_GETIFADDRS) && defined(AF_LINK)
 	    struct ifaddrs *ifa, *ifp;
 	    struct sockaddr_dl *sdlp;
diff --git a/erts/lib_src/Makefile.in b/erts/lib_src/Makefile.in
index 757b3b2..a456f64 100644
--- a/erts/lib_src/Makefile.in
+++ b/erts/lib_src/Makefile.in
@@ -20,7 +20,7 @@
 include $(ERL_TOP)/make/target.mk
 include ../include/internal/$(TARGET)/ethread.mk
 
-OMIT_OMIT_FP=no
+OMIT_OMIT_FP=yes
 
 
 CC=@CC@
