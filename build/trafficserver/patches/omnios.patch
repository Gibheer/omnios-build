diff -ru trafficserver-3.1.3/lib/ts/ink_string.cc t/lib/ts/ink_string.cc
--- trafficserver-3.1.3/lib/ts/ink_string.cc	Sun Mar 18 00:51:23 2012
+++ t/lib/ts/ink_string.cc	Tue Apr  3 06:32:49 2012
@@ -336,7 +336,7 @@
 
   inbytesleft = inlen;
   outbytesleft = *outlen;
-#if !defined(kfreebsd) && (defined(freebsd) || defined(solaris))
+#if !defined(kfreebsd) && defined(freebsd)
   if (iconv(ic, &in, &inbytesleft, &out, &outbytesleft) == (size_t) - 1)
 #else
   if (iconv(ic, (char **) &in, &inbytesleft, &out, &outbytesleft) == (size_t) - 1)
diff -ru trafficserver-3.1.3/mgmt/cluster/ClusterCom.cc t/mgmt/cluster/ClusterCom.cc
--- trafficserver-3.1.3/mgmt/cluster/ClusterCom.cc	Sun Mar 18 00:51:23 2012
+++ t/mgmt/cluster/ClusterCom.cc	Tue Apr  3 06:34:42 2012
@@ -2460,7 +2460,7 @@
 // TODO: Was #if defined(solaris) && (!defined(_FILE_OFFSET_BITS) || _FILE_OFFSET_BITS != 64)
 #if defined(solaris)
     snprintf(reply, sizeof(reply), "\twatched_process_fd: %d  watched_process_pid: %ld\n",
-             lmgmt->watched_process_fd, lmgmt->watched_process_pid);
+             lmgmt->watched_process_fd, (long int)lmgmt->watched_process_pid);
 #else
     snprintf(reply, sizeof(reply), "\twatched_process_fd: %d  watched_process_pid: %d\n",
              lmgmt->watched_process_fd, lmgmt->watched_process_pid);
diff -ru trafficserver-3.1.3/proxy/InkAPITest.cc t/proxy/InkAPITest.cc
--- trafficserver-3.1.3/proxy/InkAPITest.cc	Sun Mar 18 00:51:23 2012
+++ t/proxy/InkAPITest.cc	Tue Apr  3 06:45:50 2012
@@ -1134,7 +1134,11 @@
   }
 
   // TSThreadCreate
-  TSThread created_thread = TSThreadCreate(thread_create_handler, (void *) curr_tid);
+#if __WORDSIZE == 64
+  TSThread created_thread = TSThreadCreate(thread_create_handler, (void *)(unsigned long long)curr_tid);
+#else
+  TSThread created_thread = TSThreadCreate(thread_create_handler, (void *)curr_tid);
+#endif
   if (created_thread == NULL) {
     thread_err_count++;
     SDK_RPRINT(test, "TSThreadCreate", "TestCase1", TC_FAIL, "can't create thread");
@@ -1195,7 +1199,11 @@
 
   int ret;
   errno = 0;
+#if __WORDSIZE == 64
+  ret = pthread_create(&new_tid, NULL, pthread_start_func, (void *)(unsigned long long)curr_tid);
+#else
   ret = pthread_create(&new_tid, NULL, pthread_start_func, (void *) curr_tid);
+#endif
   if (ret != 0) {
     thread_init_err_count++;
     SDK_RPRINT(test, "TSThreadInit", "TestCase1", TC_FAIL, "can't create pthread");
